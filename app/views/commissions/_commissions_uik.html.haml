%header.jumbotron.subhead#overview
  .breadcrumb
    %li
      %a{:href => '/'} Регионы
      %span.divider →
    - @commission.ancestors.each do |c|
      %li
        %a{:href => commission_path(c.id)}= c.name
        %span.divider →
  - if @commission.election_id == 1
    %h5 Думские выборы 2011
  - else
    %h5 Выборы Президента 2012
  %h1=raw "#{@commission.name} <sup><small>#{link_to('цик', @commission.url)}</small></sup>"

.row
  .span12
    %table.voting-table.table
      %tr
        %th
        %th
        - VOTING_DICTIONARY_SHORT[@commission.election_id].each_with_index do |s,i|
          %th
            %small{"title"=>Protocol.voting_name(i+1, @commission.election_id)}= raw vds(i+1, @commission.election_id)
      - @checked.each do |p|
        - if p == @checked.first and p.priority == 0
          %tr
            %td{:width => "100px"}
              %a{:href=>@commission.url} ЦИК
            %td
            - p.votings.each_with_index do |vote,i|
              %td{"title"=>p.voting_name(i+1)}= vote
        - else
          %tr{:id => ("protocol_#{p.id}")}
            %td{:width => "120px", :style => "font-size: 12px"}
              %a{:href => commission_protocol_path(@commission.id, p.id)}
                %nobr= "КАРИК №#{p.id}"
              - if can? :destroy, p
                = link_to raw('<i class="icon-remove"></i>'), trash_protocol_path(p.id), :method => :delete, :confirm => "Удалить протокол?", :remote => :true
            %td
              %span{:title => "#{p.source}", :class => "label label-info"} источник

            - p.votings.each_with_index do |vote,i|
              %td{"title"=>p.voting_name(i+1), :class => vote_class(@commission, p, i+1)}
                = vote
          %tr{:id => ("protocol_pic_#{p.id}")}
            %td{:colspan => p.votings.count+2}
              #pictures
                - p.pictures.each do |pic|
                  .picture[pic]
                    %a{:href => pic.image_url, :target => '_blank'}
                      = image_tag pic.image_url(:thumb) if pic.image?

    - unless @unchecked.blank?
      %h2 Непроверенные протоколы
      %table.voting-table.table
        %tr
          %th
          %th
          - VOTING_DICTIONARY_SHORT[@commission.election_id].each_with_index do |s,i|
            %th
              %small{"title"=>Protocol.voting_name(i+1, @commission.election_id)}= raw vds(i+1, @commission.election_id)
        - @unchecked.each do |p|
          %tr{:id => ("protocol_#{p.id}")}
            %td{:width => "120px", :style => "font-size: 12px"}
              %a{:href => commission_protocol_path(@commission.id, p.id)}
                %nobr= "КАРИК №#{p.id}"
              - if can? :destroy, p
                = link_to raw('<i class="icon-remove"></i>'), trash_protocol_path(p.id), :method => :delete, :confirm => "Удалить протокол?", :remote => :true
            %td
              %span{:title => "#{p.source}", :class => "label label-info"} источник

            - p.votings.each_with_index do |vote,i|
              %td{"title"=>p.voting_name(i+1), :class => vote_class(@commission, p, i+1)}
                = vote
            %tr{:id => ("protocol_pic_#{p.id}")}
              %td{:colspan => p.votings.count+1}
                #pictures
                  - p.pictures.each do |pic|
                    .picture[pic]
                      %a{:href => pic.image_url}
                        = image_tag pic.image_url(:thumb) if pic.image?
.row
  .span9
    %br
    -if can? :new, Protocol
      %a{:href => new_commission_protocol_path(@commission.id), :class => 'btn btn-danger'}
        Загрузить новый протокол
    -else
      .alert.alert-info 
        %b Загрузить протокол
        Чтобы загрузить протокол, необходимо 
        = link_to("зарегистрироваться", new_user_path)
        или
        = link_to("представиться", new_session_path)
    %br
    %br

    - if request.env['HTTP_USER_AGENT'] =~ /Opera/ and (request.domain == 'xn----btbcb0bgnhbeargu4lna.xn--p1ai')
      %br
      = link_to "Просмотреть или добавить комментарий", 'http://nk12.su'
    - else
      %div#disqus_thread
      %script(type="text/javascript")
        - if ENV['RAILS_ENV'] == 'production'
          var disqus_shortname = 'nk12'; // required: replace example with your forum shortname
        - else
          var disqus_shortname = 'example'; // required: replace example with your forum shortname
        :plain

          /* * * DON'T EDIT BELOW THIS LINE * * */
          (function() {
              var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
              dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
              (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
          })();
  .span3
    - if @commission.election_id == 2
      %br
      %div
        = "Наблюдатели на участке:" if @commission.watchers.first
        - @commission.watchers.each do |watcher|
          = link_to watcher.name, user_path(watcher), :class => "btn btn-info"
          %br
          %br
        -if current_user and current_user.commission and current_user.commission.is_uik?
          = link_to 'Отказаться от наблюдения', del_watcher_commissions_path, :class => "" if @commission == current_user.commission
        -elsif @commission.watchers.size < 5 and current_user
          = link_to 'Стать наблюдателем', add_watcher_commission_path(@commission), :class => "btn btn-warning"
        -unless current_user
          .alert.alert-success 
            %b Стать наблюдателем участка
            = link_to("зарегистрируйтесь", new_user_path)
      %br
    #vk_com
      Наблюдатели в данном регионе:
      =raw '<script type="text/javascript" src="http://userapi.com/js/api/openapi.js?48"></script><!-- VK Widget --><div id="vk_groups"></div><script type="text/javascript">VK.Widgets.Group("vk_groups", {mode: 0, width: "200", height: "290"}, "'+VK_GROUP[@commission.root.id].to_s+'");</script>'
