-#    .item_holder
- unless request.xhr?
  - if @commission.is_uik
    = render :partial => 'commissions_uik'
  - else
    = render :partial => 'commissions_region'
- else
  - if @commission.state && @commission.state[:summary]
    = render 'shared/summary', :summary => @commission.state[:summary],
      :election => @commission.election
  %table.voting-table.table
    %tr
      %th{:width => "100px"}
      -#%th{:colspan => 18}
      - VOTING_DICTIONARY_SHORT[@commission.election_id].each_with_index do |s,i|
        %th{:style => "text-align: right"}
          %small{"title"=>Protocol.voting_name(i+1, @commission.election_id)}=raw vds(i+1, @commission.election_id)
    - @commission.children.each do |c|
      %tr
        %td
          %a{:href => commission_path(c.id)}
            = c.name
          - if c.state and c.state.include?(:uik)
            - (uik_protocol = c.state[:uik]).each_with_index do |vote,i|
              %td{"title"=>Protocol.voting_name(i+1, c.election_id), :class => vote_color_uik(c, i+1)}
                - if c.state[:checked] and c.state[:uik][i] != c.state[:checked][i]
                  = "#{vote} (#{c.state[:checked][i]})"
                - else
                  = vote
          - else
            - if c.state and c.state.include? :checked
              - (uik_protocol = c.state[:checked]).each_with_index do |vote,i|
                %td{"title"=>Protocol.voting_name(i+1, c.election_id), :class => 'green'}
                  = vote




-#            = vote.voting_dictionary.name
-#%div.voting-table
-#    %div.controllers
-#      %a.ico-doc_lines_stright.sprite-link{"data-id"=>child.id, :href=>new_commission_protocol_path(child)}
-#      %a.ico-spechbubble_sq_line.sprite-link{"data-id"=>child.id}
